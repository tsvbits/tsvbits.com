{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/components/Footer.js","webpack:///./src/templates/blog-index.js"],"names":["Bio","render","style","display","alignItems","marginBottom","rhythm","maxWidth","href","React","Component","License","className","Links","float","target","rel","fontSize","marginLeft","Footer","marginTop","paddingTop","BlogIndexTemplate","langKey","this","props","pageContext","posts","get","edges","Layout","SEO","Panel","map","node","title","fields","slug","key","fontFamily","boxShadow","to","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","pageQuery"],"mappings":"8MAsBeA,E,gLAlBbC,OAAA,WACE,OACE,yBACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,aAAcC,YAAO,KAGvB,yBAAKJ,MAAO,CAAEK,SAAU,MACtB,uBAAGC,KAAK,8BAAR,WADF,eAC+D,IAC7D,uBAAGA,KAAK,UAAR,oB,GAZQC,IAAMC,WCCxB,SAASC,IACP,OACE,yBAAKC,UAAU,WAAf,4DAMJ,SAASC,IACP,OACE,6BACE,yBAAKX,MAAO,CAAEY,MAAO,UACnB,uBAAGN,KAAK,SAAR,QADF,KACkC,IAChC,uBAAGA,KAAK,WAAWO,OAAO,SAASC,IAAI,uBAAvC,QAIF,uBACER,KAAK,oCACLO,OAAO,SACPC,IAAI,uBAHN,WAMK,IAbP,IAcS,IACP,uBACER,KAAK,6BACLO,OAAO,SACPC,IAAI,uBAHN,UAMK,IArBP,IAsBS,IACP,uBACER,KAAK,6CACLO,OAAO,SACPC,IAAI,uBAHN,YAvBF,KA8BS,uBAAGR,KAAK,YAAR,UACP,0BAAMN,MAAO,CAAEe,SAAU,UAAWC,WAAY,MAAhD,YACW,uBAAGV,KAAK,4BAAR,kB,IAsBFW,E,gLAfblB,OAAA,WACE,OACE,4BACEC,MAAO,CACLkB,UAAWd,YAAO,KAClBe,WAAYf,YAAO,KAGrB,kBAACO,EAAD,MACA,kBAACF,EAAD,Q,GAVaF,IAAMC,W,6DCxCrBY,E,gLACJrB,OAAA,WACE,IAAMsB,EAAUC,KAAKC,MAAMC,YAAYH,QAGjCI,GADoBC,IAAIJ,KAAM,iCAAmC,IACvCK,OAAS,GAEzC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,+BACE,kBAAC,EAAD,OAEF,8BACe,OAAZR,GAAgC,OAAZA,GACnB,kBAACS,EAAA,EAAD,gCAC2B,IACzB,uBACExB,KAAK,sEACLO,OAAO,SACPC,IAAI,uBAHN,+BAFF,KAaDW,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQP,IAAIM,EAAM,sBAAwBA,EAAKE,OAAOC,KAC5D,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEnC,MAAO,CACLqC,WAAY,yBACZtB,SAAUX,YAAO,GACjBD,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CACEJ,MAAO,CAAEsC,UAAW,QACpBC,GAAIP,EAAKE,OAAOC,KAChBrB,IAAI,YAEHmB,IAGL,+BACGO,YAAeR,EAAKS,YAAYC,KAAMrB,GADzC,MAESsB,YAAkBX,EAAKY,cAGlC,uBACEC,wBAAyB,CAAEC,OAAQd,EAAKS,YAAYM,gBAM9D,kBAAC,EAAD,Q,GA5DwBxC,IAAMC,WAoEzBwC,GAFE5B,YAEO","file":"component---src-templates-blog-index-js-58e98f9b4eaba45c42e8.js","sourcesContent":["import React from 'react';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <div style={{ maxWidth: 500 }}>\n          <a href=\"https://github.com/sergeyt\">SergeyT</a>'s dev blog.{' '}\n          <a href=\"/about\">More about me</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nfunction License() {\n  return (\n    <div className=\"license\">\n      Copyright 2019-2020 Sergey Todyshev. All Rights Reserved\n    </div>\n  );\n}\n\nfunction Links() {\n  return (\n    <div>\n      <div style={{ float: 'right' }}>\n        <a href=\"/tags\">tags</a> &bull;{' '}\n        <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n          rss\n        </a>\n      </div>\n      <a\n        href=\"https://mobile.twitter.com/todysh\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        twitter\n      </a>{' '}\n      &bull;{' '}\n      <a\n        href=\"https://github.com/sergeyt\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        github\n      </a>{' '}\n      &bull;{' '}\n      <a\n        href=\"https://www.linkedin.com/in/sergeytodyshev\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        linkedin\n      </a>\n      &bull; <a href=\"/resume/\">resume</a>\n      <span style={{ fontSize: 'smaller', marginLeft: 100 }}>\n        icons by <a href=\"https://simpleicons.org/\">simple icons</a>\n      </span>\n    </div>\n  );\n}\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <Links />\n        <License />\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const langKey = this.props.pageContext.langKey;\n\n    const allMarkdownRemark = get(this, 'props.data.allMarkdownRemark') || {};\n    const posts = allMarkdownRemark.edges || [];\n\n    return (\n      <Layout>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {langKey !== 'en' && langKey !== 'ru' && (\n            <Panel>\n              These articles have been{' '}\n              <a\n                href=\"https://github.com/gaearon/overreacted.io#contributing-translations\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                translated by the community\n              </a>\n              .\n            </Panel>\n          )}\n\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: 'none' }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}